#!/usr/bin/env bash

# Make vim the default editor.
export EDITOR='vim';

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=~/.node_history;
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Increase Bash history size. Allow 32³ entries; the default is 500.
export HISTSIZE='32768';
export HISTFILESIZE="${HISTSIZE}";
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# Hide the “default interactive shell is now zsh” warning on macOS.
export BASH_SILENCE_DEPRECATION_WARNING=1;

export DEEPSEEK_API_KEY="YourKey"
export OPENROUTER_API_KEY="YourKey"

# ########################### custom your exports here ###################################
if [[ "$(uname -s)" == "Darwin" ]]; then
    export HOMEBREW_NO_AUTO_UPDATE=1
    BREW_PREFIX=$(brew --prefix)
    JDK_PREFIX=$(brew --prefix openjdk)

    # 确保 `brew` 安装了相关工具后再修改 PATH
    for formula in coreutils make gnu-sed; do
        if brew list --formula | grep -q "^$formula$"; then
            PATH="$(brew --prefix $formula)/libexec/gnubin:$PATH"
        fi
    done

    # 解析 JAVA_HOME，避免 `realpath` 失败
    if [[ -d "$JDK_PREFIX" ]]; then
        export JAVA_HOME="$JDK_PREFIX"
        export PATH="$JAVA_HOME/bin:$PATH"
    fi

    # 设置 OpenSSL 相关路径
    export LDFLAGS="-L${BREW_PREFIX}/opt/openssl@3/lib"
    export CPPFLAGS="-I${BREW_PREFIX}/opt/openssl@3/include -I${JDK_PREFIX}/include"
    export PATH="${BREW_PREFIX}/opt/openssl@3/bin:$PATH"

    # 加载其他环境配置
    . "${BREW_PREFIX}/share/liquidprompt"
    . "${BREW_PREFIX}/etc/profile.d/z.sh"
    . "$(brew --prefix asdf)/libexec/asdf.sh"
fi

if [[ "$(uname -s)" == "Linux" && $- == *i* ]]; then
    # 只在交互式 shell 中执行
    source ~/.liquidprompt/liquidprompt
    . ~/z/z.sh
    . "$HOME/.asdf/asdf.sh"
fi


# if which asdf &> /dev/null && asdf list | grep golang > /dev/null; then
#     #export GOPATH="/Users/zxh/githubs/go"
#     export GOPATH="/home/zxh/githubs/go"
#     export GOROOT=$(asdf where golang)/go
#     PATH=$PATH:${GOROOT}/bin
#     PATH=$PATH:$GOPATH/bin
#     export GOPROXY=https://goproxy.cn
# fi
if command -v asdf &>/dev/null && asdf list golang &>/dev/null; then
    export GOPATH="$HOME/githubs/go"
    export GOROOT="$(asdf where golang)/go" || exit 1

    export PATH+=":$GOROOT/bin:$GOPATH/bin"
    export GOPROXY="https://goproxy.cn,direct"
    export GOBIN="$GOPATH/bin"  # 推荐：让 go install 默认安装到这里
fi

if command -v asdf &>/dev/null && asdf list erlang &>/dev/null; then
    export PATH+=":$(asdf where erlang)/bin" || exit 1
fi

if command -v asdf &>/dev/null && asdf list python &>/dev/null; then
    USER_BASE_BIN=$(python -m site --user-base 2>/dev/null)/bin
    ASDF_PYTHON_BIN=$(asdf where python 2>/dev/null)/bin || exit 1
    export PATH="$USER_BASE_BIN:$ASDF_PYTHON_BIN:$PATH"
fi

if command -v asdf &>/dev/null && asdf list rust &>/dev/null; then
    export PATH+=":$(asdf where rust)/bin" || exit 1
fi
