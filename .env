#!/usr/bin/env bash


export EDITOR='vim'
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
export GPG_TTY=$(tty)


# ---------------------------------------
# homebrew 初始化
#  Apple Silicon in /opt/homebrew
if [ -x "/opt/homebrew/bin/brew" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x "/usr/local/bin/brew" ]; then
  # Intel Macs 可能在 /usr/local
  eval "$(/usr/local/bin/brew shellenv)"
fi

# ---------------------------------------
# asdf 初始化
. "$(brew --prefix asdf)/libexec/asdf.sh"


# ---------------------------------------
# homebrew: Java && openssl
if [[ "$(uname -s)" == "Darwin" ]]; then
  if command -v brew &>/dev/null; then
    export BREW_PREFIX="$(brew --prefix)"

    # JDK（openjdk）路径配置
    if [[ -d "$BREW_PREFIX/opt/openjdk" ]]; then
      export JAVA_HOME="$BREW_PREFIX/opt/openjdk"
      export PATH="$PATH:$JAVA_HOME/bin"
    fi

    # OpenSSL 环境变量（用于编译 C/C++ 时）
    export LDFLAGS="-L${BREW_PREFIX}/opt/openssl@3/lib"
    export CPPFLAGS="-I${BREW_PREFIX}/opt/openssl@3/include"
  fi
fi


# ---------------------------------------
# asdf: Golang
if command -v asdf &>/dev/null; then
  # # 把 asdf shim 加到 PATH 前（只添加一次）
  # ASDF_SHIMS="$HOME/.asdf/shims"
  # case ":$PATH:" in
  #   *":$ASDF_SHIMS:"*) ;;
  #   *) export PATH="$ASDF_SHIMS:$PATH" ;;
  # esac

  # Golang 环境配置（通过 asdf 管理）
  if asdf list "golang" &>/dev/null; then
    export GOPATH="$HOME/src/go"
    export GOBIN="$GOPATH/bin"
    export GOPROXY="https://goproxy.cn,direct"

    case ":$PATH:" in
      *":$GOBIN:"*) ;;
      *) export PATH="$PATH:$GOBIN" ;;
    esac
  fi
fi


# ---------------------------------------
# Cargo: Rustup
if [ -f "$HOME/.cargo/env" ]; then
  # 避免重复添加 .cargo/bin 到 PATH
  if ! echo "$PATH" | grep -q "$HOME/.cargo/bin"; then
    source "$HOME/.cargo/env"
  fi
fi
